// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ticketmanager.Models;

#nullable disable

namespace ticketmanager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240312124148_migracja1")]
    partial class migracja1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ticketmanager.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProjectName = "Project A"
                        },
                        new
                        {
                            Id = 2,
                            ProjectName = "Project B"
                        },
                        new
                        {
                            Id = 3,
                            ProjectName = "Project C"
                        },
                        new
                        {
                            Id = 4,
                            ProjectName = "Project D"
                        });
                });

            modelBuilder.Entity("ticketmanager.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("ticketmanager.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            CreationDate = new DateTime(2024, 3, 12, 13, 41, 48, 564, DateTimeKind.Local).AddTicks(6969),
                            ProjectId = 1,
                            TaskDescription = "Description 1",
                            TaskName = "Task 1",
                            TaskStatus = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "admin",
                            CreationDate = new DateTime(2024, 3, 12, 13, 41, 48, 564, DateTimeKind.Local).AddTicks(7011),
                            ProjectId = 2,
                            TaskDescription = "Description 2",
                            TaskName = "Task 2",
                            TaskStatus = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "admin",
                            CreationDate = new DateTime(2024, 3, 12, 13, 41, 48, 564, DateTimeKind.Local).AddTicks(7014),
                            ProjectId = 3,
                            TaskDescription = "Description 3",
                            TaskName = "Task 3",
                            TaskStatus = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "admin",
                            CreationDate = new DateTime(2024, 3, 12, 13, 41, 48, 564, DateTimeKind.Local).AddTicks(7016),
                            ProjectId = 4,
                            TaskDescription = "Description 4",
                            TaskName = "Task 4",
                            TaskStatus = 1
                        });
                });

            modelBuilder.Entity("ticketmanager.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "$2b$10$qTsI5q5lJ4M/og7LSDuMcerNxY3qbkeWpEekYuOLE3F1juI0FMfI.",
                            RoleId = 1,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Password = "$2b$10$Q0euShiSntBJ8C7JwQ.koe4jZi2NFJ9luE3IzRx0yD16w9iNt9/NO",
                            RoleId = 1,
                            UserName = "admin2"
                        },
                        new
                        {
                            Id = 3,
                            Password = "$2b$10$ySROZX4JDwz.zsIuXtQVduoyKdp3ieuAPZlbCbBZtxwHqrluHmIKy",
                            RoleId = 2,
                            UserName = "user"
                        },
                        new
                        {
                            Id = 4,
                            Password = "$2b$10$1TufoEUl1Z6JumO9W7T5xOTNFkOWWWmz.QaOTLyBnJziOxz8OTuU2",
                            RoleId = 2,
                            UserName = "user2"
                        },
                        new
                        {
                            Id = 5,
                            Password = "$2b$10$o6IXLD48igXPJrRnB0mze.ptFGkpWGLeSeKqg7irPV42Y2raklfW.",
                            RoleId = 2,
                            UserName = "user3"
                        },
                        new
                        {
                            Id = 6,
                            Password = "$2b$10$G7xP5FjVXzp/n4qep.28feQUl5obVZSBEisrjCgmjgTsbk/D7xb7O",
                            RoleId = 2,
                            UserName = "user4"
                        },
                        new
                        {
                            Id = 7,
                            Password = "$2b$10$seOpQ9D7iGJDHyCbZoIhZ..J.XxAE4VLNpe5xuQyf7VSvVZ3Sgf/.",
                            RoleId = 2,
                            UserName = "user5"
                        },
                        new
                        {
                            Id = 8,
                            Password = "$2b$10$L9.ANlCIaTmZ/O1UbOQTFeN4VyYozIBWP.CJsNhbO.xe45Zwyszha",
                            RoleId = 2,
                            UserName = "user6"
                        },
                        new
                        {
                            Id = 9,
                            Password = "$2b$10$dbHa5ka/f2zOudo0aSeH9.v1rdlshVO0wxqZCOvjVD5SLnwhnUGhO",
                            RoleId = 2,
                            UserName = "user7"
                        });
                });

            modelBuilder.Entity("ticketmanager.Models.UserProject", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("UserProjects");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            ProjectId = 2
                        },
                        new
                        {
                            UserId = 1,
                            ProjectId = 3
                        },
                        new
                        {
                            UserId = 1,
                            ProjectId = 4
                        },
                        new
                        {
                            UserId = 1,
                            ProjectId = 1
                        },
                        new
                        {
                            UserId = 2,
                            ProjectId = 3
                        },
                        new
                        {
                            UserId = 3,
                            ProjectId = 4
                        },
                        new
                        {
                            UserId = 4,
                            ProjectId = 3
                        },
                        new
                        {
                            UserId = 5,
                            ProjectId = 3
                        },
                        new
                        {
                            UserId = 6,
                            ProjectId = 3
                        },
                        new
                        {
                            UserId = 7,
                            ProjectId = 3
                        },
                        new
                        {
                            UserId = 8,
                            ProjectId = 3
                        },
                        new
                        {
                            UserId = 9,
                            ProjectId = 3
                        },
                        new
                        {
                            UserId = 3,
                            ProjectId = 3
                        },
                        new
                        {
                            UserId = 4,
                            ProjectId = 4
                        },
                        new
                        {
                            UserId = 5,
                            ProjectId = 4
                        },
                        new
                        {
                            UserId = 6,
                            ProjectId = 2
                        });
                });

            modelBuilder.Entity("ticketmanager.Models.UserTask", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "TaskId");

                    b.HasIndex("TaskId");

                    b.ToTable("UserTasks", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 4,
                            TaskId = 2
                        },
                        new
                        {
                            UserId = 4,
                            TaskId = 3
                        },
                        new
                        {
                            UserId = 4,
                            TaskId = 4
                        },
                        new
                        {
                            UserId = 5,
                            TaskId = 3
                        },
                        new
                        {
                            UserId = 6,
                            TaskId = 4
                        },
                        new
                        {
                            UserId = 7,
                            TaskId = 3
                        });
                });

            modelBuilder.Entity("ticketmanager.Models.Task", b =>
                {
                    b.HasOne("ticketmanager.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ticketmanager.Models.User", b =>
                {
                    b.HasOne("ticketmanager.Models.Project", "Project")
                        .WithMany("Users")
                        .HasForeignKey("ProjectId");

                    b.HasOne("ticketmanager.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ticketmanager.Models.UserProject", b =>
                {
                    b.HasOne("ticketmanager.Models.Project", "Project")
                        .WithMany("UserProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ticketmanager.Models.User", "User")
                        .WithMany("UserProjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ticketmanager.Models.UserTask", b =>
                {
                    b.HasOne("ticketmanager.Models.Task", "Task")
                        .WithMany("UserTasks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ticketmanager.Models.User", "User")
                        .WithMany("UserTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ticketmanager.Models.Project", b =>
                {
                    b.Navigation("Tasks");

                    b.Navigation("UserProjects");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ticketmanager.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ticketmanager.Models.Task", b =>
                {
                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("ticketmanager.Models.User", b =>
                {
                    b.Navigation("UserProjects");

                    b.Navigation("UserTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
